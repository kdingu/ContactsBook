@model ContactsBook.ViewModels.AllContactsViewModel
@{
    ViewBag.Title = "Contacts";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<br />
<table class="table table-hover" style="display: none; width: 100%;" id="contacts">
    <thead class="table-active">
        <tr>
            <td><strong>First name</strong></td>
            <td><strong>Last name</strong></td>
            <td class="text-center"><strong>Email</strong></td>
            <td class="text-center"><strong>Phone</strong></td>
            <td class="text-center"><strong>Address</strong></td>
            <td class="text-center"><strong>Details</strong></td>
        </tr>
    </thead>

    <tbody>
        @{
            foreach (var item in Model.Contacts)
            {
                <tr>
                    <td>@item.FirstName</td>
                    <td>@item.LastName</td>
                    <td>
                        @{
                            var emails = Model.Emails.Where(e => e.ContactId == item.Id);
                            <ul>
                                @for (int i = 0; i < emails.Count(); i++)
                                {
                                    <li style="list-style: none;">@Html.DisplayTextFor(e => emails.ElementAt(i).EmailAddress)</li>
                                }
                            </ul>
                        }
                    </td>
                    <td>
                        @{
                            var phones = Model.Phones.Where(p => p.ContactId == item.Id);
                            <ul>
                                @for (int i = 0; i < phones.Count(); i++)
                                {
                                    <li style="list-style: none;">@Html.DisplayTextFor(p => phones.ElementAt(i).PhoneNumber)</li>
                                }
                            </ul>
                        }
                    </td>
                    <td>
                        @{
                            var addresses = Model.Addresses.Where(a => a.ContactId == item.Id);
                            <ul>
                                @for (int i = 0; i < addresses.Count(); i++)
                                {
                                    <li style="list-style: none;">@Html.DisplayTextFor(a => addresses.ElementAt(i).ContactAddress)</li>
                                }
                            </ul>
                        }
                    </td>
                    <td class="text-center">@Html.ActionLink("Edit", "Details", "Contact", new { @item.Id }, new { @style = "text-decoration: none;", @class = "btn-link" })</td>
                </tr>
            }
        }
    </tbody>
</table>
<div class="row" style="margin-top: 3rem; margin-bottom: 3rem;">
    <div class="col-md-6">
        @Html.ActionLink("Add a new contact", "New", "Contact", null, new { @class = "btn btn-outline-success" })
        <button id="downloadCsvButton" class="btn btn-outline-light">Download CSV file</button>
    </div>
    <div class="col-md-6 text-right">
        @using (Html.BeginForm("UploadCsv", "Contact", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <input type="file" id="dataFile" name="upload" />
            <input type="submit" value="Upload CSV" class="btn btn-outline-light" />
        }
    </div>
</div>

@section scripts{

    @* Download CSV script *@
    <script src="~/Scripts/JavaScript.js"></script>

    @* Pagination, Sorting and Filtering to table *@
    <script type="text/javascript">
        $(document).ready(function () {
            $("#contacts").DataTable();
            $("#contacts").show();
        });
    </script>

}
